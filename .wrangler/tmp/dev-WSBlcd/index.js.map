{
  "version": 3,
  "sources": ["../bundle-kawm7v/checked-fetch.js", "../bundle-kawm7v/strip-cf-connecting-ip-header.js", "../../../src/index.ts", "../../../node_modules/wrangler/templates/middleware/middleware-ensure-req-body-drained.ts", "../../../node_modules/wrangler/templates/middleware/middleware-miniflare3-json-error.ts", "../bundle-kawm7v/middleware-insertion-facade.js", "../../../node_modules/wrangler/templates/middleware/common.ts", "../bundle-kawm7v/middleware-loader.entry.ts"],
  "sourceRoot": "/Users/emilycogsdill/Documents/GitHub/chesscom-helper/worktrees/development/.wrangler/tmp/dev-WSBlcd",
  "sourcesContent": ["const urls = new Set();\n\nfunction checkURL(request, init) {\n\tconst url =\n\t\trequest instanceof URL\n\t\t\t? request\n\t\t\t: new URL(\n\t\t\t\t\t(typeof request === \"string\"\n\t\t\t\t\t\t? new Request(request, init)\n\t\t\t\t\t\t: request\n\t\t\t\t\t).url\n\t\t\t\t);\n\tif (url.port && url.port !== \"443\" && url.protocol === \"https:\") {\n\t\tif (!urls.has(url.toString())) {\n\t\t\turls.add(url.toString());\n\t\t\tconsole.warn(\n\t\t\t\t`WARNING: known issue with \\`fetch()\\` requests to custom HTTPS ports in published Workers:\\n` +\n\t\t\t\t\t` - ${url.toString()} - the custom port will be ignored when the Worker is published using the \\`wrangler deploy\\` command.\\n`\n\t\t\t);\n\t\t}\n\t}\n}\n\nglobalThis.fetch = new Proxy(globalThis.fetch, {\n\tapply(target, thisArg, argArray) {\n\t\tconst [request, init] = argArray;\n\t\tcheckURL(request, init);\n\t\treturn Reflect.apply(target, thisArg, argArray);\n\t},\n});\n", "function stripCfConnectingIPHeader(input, init) {\n\tconst request = new Request(input, init);\n\trequest.headers.delete(\"CF-Connecting-IP\");\n\treturn request;\n}\n\nglobalThis.fetch = new Proxy(globalThis.fetch, {\n\tapply(target, thisArg, argArray) {\n\t\treturn Reflect.apply(target, thisArg, [\n\t\t\tstripCfConnectingIPHeader.apply(null, argArray),\n\t\t]);\n\t},\n});\n", "export interface Env {\n  DB: D1Database\n  CACHE: KVNamespace\n  JWT_SECRET: string\n  CHESS_COM_API_URL: string\n  EMAIL_API_KEY: string\n  RESEND_API_KEY: string\n}\n\n// In-memory storage for monitored players\nlet monitoredPlayers: string[] = []\n\n// Simple auth storage\nlet users: Map<string, {id: string, username: string, passwordHash: string}> = new Map()\nlet sessions: Map<string, {userId: string, token: string}> = new Map()\n\n// Simple hash function (basic - not production ready)\nasync function simpleHash(password: string): Promise<string> {\n  const encoder = new TextEncoder()\n  const data = encoder.encode(password)\n  const hashBuffer = await crypto.subtle.digest('SHA-256', data)\n  return Array.from(new Uint8Array(hashBuffer)).map(b => b.toString(16).padStart(2, '0')).join('')\n}\n\n// Generate session token\nfunction generateToken(): string {\n  return Math.random().toString(36) + Date.now().toString(36)\n}\n\n// Validate Chess.com user\nasync function validateChessComUser(username: string): Promise<{ exists: boolean, data?: any }> {\n  try {\n    // Chess.com usernames are case-insensitive in the API\n    const normalizedUsername = username.toLowerCase()\n    const response = await fetch(`https://api.chess.com/pub/player/${normalizedUsername}`, {\n      headers: {\n        'User-Agent': 'Chess.com-Helper/1.0'\n      }\n    })\n    \n    console.log(`Chess.com API response for ${normalizedUsername}: ${response.status}`)\n    \n    if (response.status === 200) {\n      const data = await response.json()\n      return { exists: true, data }\n    } else if (response.status === 404) {\n      return { exists: false }\n    }\n    \n    // For any other status, allow the user to be added\n    return { exists: true }\n  } catch (error) {\n    console.error('Chess.com API error:', error)\n    return { exists: true } // Allow if API fails\n  }\n}\n\nexport default {\n  async fetch(request: Request, env: Env, ctx: ExecutionContext): Promise<Response> {\n    const url = new URL(request.url)\n    \n    // Health check\n    if (url.pathname === '/health') {\n      return new Response(JSON.stringify({ \n        status: 'ok', \n        message: 'Chess.com Helper running'\n      }), {\n        headers: { 'Content-Type': 'application/json' }\n      })\n    }\n    \n    // Get players API\n    if (url.pathname === '/api/players' && request.method === 'GET') {\n      return new Response(JSON.stringify({ \n        players: monitoredPlayers,\n        count: monitoredPlayers.length\n      }), {\n        headers: { 'Content-Type': 'application/json' }\n      })\n    }\n    \n    // Test Chess.com API endpoint\n    if (url.pathname.startsWith('/api/test-chess/')) {\n      const username = url.pathname.replace('/api/test-chess/', '')\n      try {\n        const response = await fetch(`https://api.chess.com/pub/player/${username}`, {\n          headers: {\n            'User-Agent': 'Chess.com-Helper/1.0'\n          }\n        })\n        \n        const responseText = await response.text()\n        let data = null\n        try {\n          data = JSON.parse(responseText)\n        } catch (e) {\n          // Not JSON\n        }\n        \n        return new Response(JSON.stringify({ \n          username,\n          status: response.status,\n          headers: Object.fromEntries(response.headers.entries()),\n          data: data,\n          responseText: responseText.substring(0, 500)\n        }), {\n          headers: { 'Content-Type': 'application/json' }\n        })\n      } catch (error) {\n        return new Response(JSON.stringify({ \n          error: error.toString()\n        }), {\n          headers: { 'Content-Type': 'application/json' }\n        })\n      }\n    }\n\n    // Register API - simplified version\n    if (url.pathname === '/api/register' && request.method === 'POST') {\n      try {\n        const body = await request.json()\n        const { username, password } = body\n        \n        if (!username || !password) {\n          return new Response(JSON.stringify({ error: 'Username and password required' }), \n            { status: 400, headers: { 'Content-Type': 'application/json' } })\n        }\n        \n        // Skip hashing for now, just store plain text temporarily\n        const userId = Date.now().toString()\n        const user = { id: userId, username, passwordHash: password }\n        users.set(username.toLowerCase(), user)\n        \n        const token = generateToken()\n        sessions.set(token, { userId, token })\n        \n        return new Response(JSON.stringify({ \n          success: true, \n          token, \n          user: { id: userId, username }\n        }), { headers: { 'Content-Type': 'application/json' } })\n      } catch (error) {\n        return new Response(JSON.stringify({ error: 'Invalid request' }), \n          { status: 400, headers: { 'Content-Type': 'application/json' } })\n      }\n    }\n\n    // Monitor player API\n    if (url.pathname === '/api/monitor' && request.method === 'POST') {\n      try {\n        const body = await request.json()\n        const { username } = body\n        \n        if (!username || username.length < 3) {\n          return new Response(JSON.stringify({ \n            error: 'Invalid username' \n          }), { status: 400, headers: { 'Content-Type': 'application/json' } })\n        }\n        \n        if (monitoredPlayers.includes(username)) {\n          return new Response(JSON.stringify({ \n            error: `Already monitoring ${username}` \n          }), { status: 400, headers: { 'Content-Type': 'application/json' } })\n        }\n        \n        // Validate user exists on Chess.com\n        const validation = await validateChessComUser(username)\n        if (!validation.exists) {\n          return new Response(JSON.stringify({ \n            error: `User \"${username}\" not found on Chess.com. Try the exact username (e.g., \"MagnusCarlsen\" instead of \"Magnus\")` \n          }), { status: 404, headers: { 'Content-Type': 'application/json' } })\n        }\n        \n        monitoredPlayers.push(username)\n        \n        return new Response(JSON.stringify({ \n          success: true,\n          message: `Started monitoring ${username}`,\n          username: username\n        }), { headers: { 'Content-Type': 'application/json' } })\n      } catch (error) {\n        return new Response(JSON.stringify({ \n          error: 'Invalid request' \n        }), { status: 400, headers: { 'Content-Type': 'application/json' } })\n      }\n    }\n    \n    // Main page\n    if (url.pathname === '/') {\n      return new Response(getHTML(), {\n        headers: { 'Content-Type': 'text/html' }\n      })\n    }\n    \n    return new Response('Not Found', { status: 404 })\n  }\n}\n\nfunction getHTML() {\n  return `<!DOCTYPE html>\n<html>\n<head>\n    <title>Chess.com Helper</title>\n    <meta charset=\"utf-8\">\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1\">\n    <style>\n      body { font-family: system-ui; margin: 0; background: #0f0f23; color: #e8eaed; padding: 2rem; }\n      .container { max-width: 600px; margin: 0 auto; background: #16213e; padding: 2rem; border-radius: 20px; }\n      h1 { text-align: center; color: #64b5f6; }\n      .form-group { margin: 1rem 0; }\n      label { display: block; margin-bottom: 0.5rem; color: #9aa0a6; }\n      input { width: 100%; padding: 0.8rem; background: #1a1a2e; border: 1px solid #333; border-radius: 8px; color: #e8eaed; }\n      button { width: 100%; padding: 0.8rem; background: #64b5f6; color: white; border: none; border-radius: 8px; font-weight: 600; cursor: pointer; }\n      button:hover { background: #90caf9; }\n      .players { margin-top: 2rem; }\n      .player { background: #1a1a2e; padding: 0.8rem; margin: 0.5rem 0; border-radius: 8px; }\n    </style>\n</head>\n<body>\n    <div class=\"container\">\n        <h1>\u265A Chess.com Helper</h1>\n        \n        <form id=\"playerForm\">\n            <div class=\"form-group\">\n                <label>Chess.com Username</label>\n                <input type=\"text\" id=\"username\" placeholder=\"e.g. Magnus\" required>\n            </div>\n            <button type=\"submit\">Start Monitoring</button>\n        </form>\n        \n        <div class=\"players\">\n            <h3>Monitored Players</h3>\n            <div id=\"playersList\">Loading...</div>\n        </div>\n    </div>\n    \n    <script>\n        async function loadPlayers() {\n            try {\n                const response = await fetch('/api/players');\n                const data = await response.json();\n                const list = document.getElementById('playersList');\n                if (data.players.length === 0) {\n                    list.innerHTML = '<p>No players yet</p>';\n                } else {\n                    list.innerHTML = data.players.map(p => \n                        '<div class=\"player\">\u265F\uFE0F ' + p + '</div>'\n                    ).join('');\n                }\n            } catch (error) {\n                document.getElementById('playersList').innerHTML = '<p>Error loading</p>';\n            }\n        }\n        \n        document.getElementById('playerForm').addEventListener('submit', async function(e) {\n            e.preventDefault();\n            const username = document.getElementById('username').value.trim();\n            const btn = this.querySelector('button');\n            \n            if (!username) return;\n            \n            btn.disabled = true;\n            btn.textContent = 'Checking...';\n            \n            try {\n                const response = await fetch('/api/monitor', {\n                    method: 'POST',\n                    headers: { 'Content-Type': 'application/json' },\n                    body: JSON.stringify({ username })\n                });\n                \n                const data = await response.json();\n                \n                if (response.ok) {\n                    alert('\u2705 ' + data.message);\n                    document.getElementById('username').value = '';\n                    loadPlayers();\n                } else {\n                    alert('\u274C ' + data.error);\n                }\n            } catch (error) {\n                alert('\u274C Error connecting to server');\n            } finally {\n                btn.disabled = false;\n                btn.textContent = 'Start Monitoring';\n            }\n        });\n        \n        loadPlayers();\n    </script>\n</body>\n</html>`\n}", "import type { Middleware } from \"./common\";\n\nconst drainBody: Middleware = async (request, env, _ctx, middlewareCtx) => {\n\ttry {\n\t\treturn await middlewareCtx.next(request, env);\n\t} finally {\n\t\ttry {\n\t\t\tif (request.body !== null && !request.bodyUsed) {\n\t\t\t\tconst reader = request.body.getReader();\n\t\t\t\twhile (!(await reader.read()).done) {}\n\t\t\t}\n\t\t} catch (e) {\n\t\t\tconsole.error(\"Failed to drain the unused request body.\", e);\n\t\t}\n\t}\n};\n\nexport default drainBody;\n", "import type { Middleware } from \"./common\";\n\ninterface JsonError {\n\tmessage?: string;\n\tname?: string;\n\tstack?: string;\n\tcause?: JsonError;\n}\n\nfunction reduceError(e: any): JsonError {\n\treturn {\n\t\tname: e?.name,\n\t\tmessage: e?.message ?? String(e),\n\t\tstack: e?.stack,\n\t\tcause: e?.cause === undefined ? undefined : reduceError(e.cause),\n\t};\n}\n\n// See comment in `bundle.ts` for details on why this is needed\nconst jsonError: Middleware = async (request, env, _ctx, middlewareCtx) => {\n\ttry {\n\t\treturn await middlewareCtx.next(request, env);\n\t} catch (e: any) {\n\t\tconst error = reduceError(e);\n\t\treturn Response.json(error, {\n\t\t\tstatus: 500,\n\t\t\theaders: { \"MF-Experimental-Error-Stack\": \"true\" },\n\t\t});\n\t}\n};\n\nexport default jsonError;\n", "\t\t\t\timport worker, * as OTHER_EXPORTS from \"/Users/emilycogsdill/Documents/GitHub/chesscom-helper/worktrees/development/src/index.ts\";\n\t\t\t\timport * as __MIDDLEWARE_0__ from \"/Users/emilycogsdill/Documents/GitHub/chesscom-helper/worktrees/development/node_modules/wrangler/templates/middleware/middleware-ensure-req-body-drained.ts\";\nimport * as __MIDDLEWARE_1__ from \"/Users/emilycogsdill/Documents/GitHub/chesscom-helper/worktrees/development/node_modules/wrangler/templates/middleware/middleware-miniflare3-json-error.ts\";\n\n\t\t\t\texport * from \"/Users/emilycogsdill/Documents/GitHub/chesscom-helper/worktrees/development/src/index.ts\";\n\n\t\t\t\texport const __INTERNAL_WRANGLER_MIDDLEWARE__ = [\n\t\t\t\t\t\n\t\t\t\t\t__MIDDLEWARE_0__.default,__MIDDLEWARE_1__.default\n\t\t\t\t]\n\t\t\t\texport default worker;", "export type Awaitable<T> = T | Promise<T>;\n// TODO: allow dispatching more events?\nexport type Dispatcher = (\n\ttype: \"scheduled\",\n\tinit: { cron?: string }\n) => Awaitable<void>;\n\nexport type IncomingRequest = Request<\n\tunknown,\n\tIncomingRequestCfProperties<unknown>\n>;\n\nexport interface MiddlewareContext {\n\tdispatch: Dispatcher;\n\tnext(request: IncomingRequest, env: any): Awaitable<Response>;\n}\n\nexport type Middleware = (\n\trequest: IncomingRequest,\n\tenv: any,\n\tctx: ExecutionContext,\n\tmiddlewareCtx: MiddlewareContext\n) => Awaitable<Response>;\n\nconst __facade_middleware__: Middleware[] = [];\n\n// The register functions allow for the insertion of one or many middleware,\n// We register internal middleware first in the stack, but have no way of controlling\n// the order that addMiddleware is run in service workers so need an internal function.\nexport function __facade_register__(...args: (Middleware | Middleware[])[]) {\n\t__facade_middleware__.push(...args.flat());\n}\nexport function __facade_registerInternal__(\n\t...args: (Middleware | Middleware[])[]\n) {\n\t__facade_middleware__.unshift(...args.flat());\n}\n\nfunction __facade_invokeChain__(\n\trequest: IncomingRequest,\n\tenv: any,\n\tctx: ExecutionContext,\n\tdispatch: Dispatcher,\n\tmiddlewareChain: Middleware[]\n): Awaitable<Response> {\n\tconst [head, ...tail] = middlewareChain;\n\tconst middlewareCtx: MiddlewareContext = {\n\t\tdispatch,\n\t\tnext(newRequest, newEnv) {\n\t\t\treturn __facade_invokeChain__(newRequest, newEnv, ctx, dispatch, tail);\n\t\t},\n\t};\n\treturn head(request, env, ctx, middlewareCtx);\n}\n\nexport function __facade_invoke__(\n\trequest: IncomingRequest,\n\tenv: any,\n\tctx: ExecutionContext,\n\tdispatch: Dispatcher,\n\tfinalMiddleware: Middleware\n): Awaitable<Response> {\n\treturn __facade_invokeChain__(request, env, ctx, dispatch, [\n\t\t...__facade_middleware__,\n\t\tfinalMiddleware,\n\t]);\n}\n", "// This loads all middlewares exposed on the middleware object and then starts\n// the invocation chain. The big idea is that we can add these to the middleware\n// export dynamically through wrangler, or we can potentially let users directly\n// add them as a sort of \"plugin\" system.\n\nimport ENTRY, { __INTERNAL_WRANGLER_MIDDLEWARE__ } from \"/Users/emilycogsdill/Documents/GitHub/chesscom-helper/worktrees/development/.wrangler/tmp/bundle-kawm7v/middleware-insertion-facade.js\";\nimport { __facade_invoke__, __facade_register__, Dispatcher } from \"/Users/emilycogsdill/Documents/GitHub/chesscom-helper/worktrees/development/node_modules/wrangler/templates/middleware/common.ts\";\nimport type { WorkerEntrypointConstructor } from \"/Users/emilycogsdill/Documents/GitHub/chesscom-helper/worktrees/development/.wrangler/tmp/bundle-kawm7v/middleware-insertion-facade.js\";\n\n// Preserve all the exports from the worker\nexport * from \"/Users/emilycogsdill/Documents/GitHub/chesscom-helper/worktrees/development/.wrangler/tmp/bundle-kawm7v/middleware-insertion-facade.js\";\n\nclass __Facade_ScheduledController__ implements ScheduledController {\n\treadonly #noRetry: ScheduledController[\"noRetry\"];\n\n\tconstructor(\n\t\treadonly scheduledTime: number,\n\t\treadonly cron: string,\n\t\tnoRetry: ScheduledController[\"noRetry\"]\n\t) {\n\t\tthis.#noRetry = noRetry;\n\t}\n\n\tnoRetry() {\n\t\tif (!(this instanceof __Facade_ScheduledController__)) {\n\t\t\tthrow new TypeError(\"Illegal invocation\");\n\t\t}\n\t\t// Need to call native method immediately in case uncaught error thrown\n\t\tthis.#noRetry();\n\t}\n}\n\nfunction wrapExportedHandler(worker: ExportedHandler): ExportedHandler {\n\t// If we don't have any middleware defined, just return the handler as is\n\tif (\n\t\t__INTERNAL_WRANGLER_MIDDLEWARE__ === undefined ||\n\t\t__INTERNAL_WRANGLER_MIDDLEWARE__.length === 0\n\t) {\n\t\treturn worker;\n\t}\n\t// Otherwise, register all middleware once\n\tfor (const middleware of __INTERNAL_WRANGLER_MIDDLEWARE__) {\n\t\t__facade_register__(middleware);\n\t}\n\n\tconst fetchDispatcher: ExportedHandlerFetchHandler = function (\n\t\trequest,\n\t\tenv,\n\t\tctx\n\t) {\n\t\tif (worker.fetch === undefined) {\n\t\t\tthrow new Error(\"Handler does not export a fetch() function.\");\n\t\t}\n\t\treturn worker.fetch(request, env, ctx);\n\t};\n\n\treturn {\n\t\t...worker,\n\t\tfetch(request, env, ctx) {\n\t\t\tconst dispatcher: Dispatcher = function (type, init) {\n\t\t\t\tif (type === \"scheduled\" && worker.scheduled !== undefined) {\n\t\t\t\t\tconst controller = new __Facade_ScheduledController__(\n\t\t\t\t\t\tDate.now(),\n\t\t\t\t\t\tinit.cron ?? \"\",\n\t\t\t\t\t\t() => {}\n\t\t\t\t\t);\n\t\t\t\t\treturn worker.scheduled(controller, env, ctx);\n\t\t\t\t}\n\t\t\t};\n\t\t\treturn __facade_invoke__(request, env, ctx, dispatcher, fetchDispatcher);\n\t\t},\n\t};\n}\n\nfunction wrapWorkerEntrypoint(\n\tklass: WorkerEntrypointConstructor\n): WorkerEntrypointConstructor {\n\t// If we don't have any middleware defined, just return the handler as is\n\tif (\n\t\t__INTERNAL_WRANGLER_MIDDLEWARE__ === undefined ||\n\t\t__INTERNAL_WRANGLER_MIDDLEWARE__.length === 0\n\t) {\n\t\treturn klass;\n\t}\n\t// Otherwise, register all middleware once\n\tfor (const middleware of __INTERNAL_WRANGLER_MIDDLEWARE__) {\n\t\t__facade_register__(middleware);\n\t}\n\n\t// `extend`ing `klass` here so other RPC methods remain callable\n\treturn class extends klass {\n\t\t#fetchDispatcher: ExportedHandlerFetchHandler<Record<string, unknown>> = (\n\t\t\trequest,\n\t\t\tenv,\n\t\t\tctx\n\t\t) => {\n\t\t\tthis.env = env;\n\t\t\tthis.ctx = ctx;\n\t\t\tif (super.fetch === undefined) {\n\t\t\t\tthrow new Error(\"Entrypoint class does not define a fetch() function.\");\n\t\t\t}\n\t\t\treturn super.fetch(request);\n\t\t};\n\n\t\t#dispatcher: Dispatcher = (type, init) => {\n\t\t\tif (type === \"scheduled\" && super.scheduled !== undefined) {\n\t\t\t\tconst controller = new __Facade_ScheduledController__(\n\t\t\t\t\tDate.now(),\n\t\t\t\t\tinit.cron ?? \"\",\n\t\t\t\t\t() => {}\n\t\t\t\t);\n\t\t\t\treturn super.scheduled(controller);\n\t\t\t}\n\t\t};\n\n\t\tfetch(request: Request<unknown, IncomingRequestCfProperties>) {\n\t\t\treturn __facade_invoke__(\n\t\t\t\trequest,\n\t\t\t\tthis.env,\n\t\t\t\tthis.ctx,\n\t\t\t\tthis.#dispatcher,\n\t\t\t\tthis.#fetchDispatcher\n\t\t\t);\n\t\t}\n\t};\n}\n\nlet WRAPPED_ENTRY: ExportedHandler | WorkerEntrypointConstructor | undefined;\nif (typeof ENTRY === \"object\") {\n\tWRAPPED_ENTRY = wrapExportedHandler(ENTRY);\n} else if (typeof ENTRY === \"function\") {\n\tWRAPPED_ENTRY = wrapWorkerEntrypoint(ENTRY);\n}\nexport default WRAPPED_ENTRY;\n"],
  "mappings": "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",
  "names": []
}
