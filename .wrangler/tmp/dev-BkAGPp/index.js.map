{
  "version": 3,
  "sources": ["../bundle-dF49rh/checked-fetch.js", "../bundle-dF49rh/strip-cf-connecting-ip-header.js", "../../../src/index.ts", "../../../node_modules/wrangler/templates/middleware/middleware-ensure-req-body-drained.ts", "../../../node_modules/wrangler/templates/middleware/middleware-miniflare3-json-error.ts", "../bundle-dF49rh/middleware-insertion-facade.js", "../../../node_modules/wrangler/templates/middleware/common.ts", "../bundle-dF49rh/middleware-loader.entry.ts"],
  "sourceRoot": "/Users/emilycogsdill/Documents/GitHub/chesscom-helper/worktrees/development/.wrangler/tmp/dev-BkAGPp",
  "sourcesContent": ["const urls = new Set();\n\nfunction checkURL(request, init) {\n\tconst url =\n\t\trequest instanceof URL\n\t\t\t? request\n\t\t\t: new URL(\n\t\t\t\t\t(typeof request === \"string\"\n\t\t\t\t\t\t? new Request(request, init)\n\t\t\t\t\t\t: request\n\t\t\t\t\t).url\n\t\t\t\t);\n\tif (url.port && url.port !== \"443\" && url.protocol === \"https:\") {\n\t\tif (!urls.has(url.toString())) {\n\t\t\turls.add(url.toString());\n\t\t\tconsole.warn(\n\t\t\t\t`WARNING: known issue with \\`fetch()\\` requests to custom HTTPS ports in published Workers:\\n` +\n\t\t\t\t\t` - ${url.toString()} - the custom port will be ignored when the Worker is published using the \\`wrangler deploy\\` command.\\n`\n\t\t\t);\n\t\t}\n\t}\n}\n\nglobalThis.fetch = new Proxy(globalThis.fetch, {\n\tapply(target, thisArg, argArray) {\n\t\tconst [request, init] = argArray;\n\t\tcheckURL(request, init);\n\t\treturn Reflect.apply(target, thisArg, argArray);\n\t},\n});\n", "function stripCfConnectingIPHeader(input, init) {\n\tconst request = new Request(input, init);\n\trequest.headers.delete(\"CF-Connecting-IP\");\n\treturn request;\n}\n\nglobalThis.fetch = new Proxy(globalThis.fetch, {\n\tapply(target, thisArg, argArray) {\n\t\treturn Reflect.apply(target, thisArg, [\n\t\t\tstripCfConnectingIPHeader.apply(null, argArray),\n\t\t]);\n\t},\n});\n", "export interface Env {\n  DB: D1Database\n  CACHE: KVNamespace\n  JWT_SECRET: string\n  CHESS_COM_API_URL: string\n  EMAIL_API_KEY: string\n  RESEND_API_KEY: string\n}\n\n// In-memory storage for monitored players (will reset on worker restart)\nlet monitoredPlayers: string[] = []\n\n// Validate if a Chess.com user exists\nasync function validateChessComUser(username: string): Promise<{ exists: boolean, data?: any }> {\n  try {\n    const response = await fetch(`https://api.chess.com/pub/player/${username}`, {\n      headers: {\n        'User-Agent': 'ChesscomHelper/1.0'\n      }\n    })\n    \n    if (response.status === 200) {\n      const data = await response.json()\n      return { exists: true, data }\n    } else if (response.status === 404) {\n      return { exists: false }\n    } else {\n      // Other errors (rate limit, server error, etc.)\n      throw new Error(`Chess.com API returned ${response.status}`)\n    }\n  } catch (error) {\n    console.error('Chess.com API error:', error)\n    // If API is down, we'll allow the user to be added anyway\n    return { exists: true }\n  }\n}\n\nexport default {\n  async fetch(request: Request, env: Env, ctx: ExecutionContext): Promise<Response> {\n    const url = new URL(request.url)\n    \n    // Basic health check\n    if (url.pathname === '/health') {\n      return new Response(JSON.stringify({ \n        status: 'ok', \n        timestamp: new Date().toISOString(),\n        message: 'Chesscom Helper API is running'\n      }), {\n        headers: { 'Content-Type': 'application/json' }\n      })\n    }\n    \n    // Serve favicon\n    if (url.pathname === '/favicon.ico') {\n      try {\n        // For Cloudflare Workers, we need to embed the favicon or serve it differently\n        // Since we can't access the filesystem directly, return a 404 for now\n        // The favicon will be referenced in HTML but served from the project root\n        return new Response('Not Found', { status: 404 })\n      } catch (error) {\n        return new Response('Not Found', { status: 404 })\n      }\n    }\n    \n    // Root path - serve HTML frontend\n    if (url.pathname === '/') {\n      return new Response(`\n<!DOCTYPE html>\n<html>\n<head>\n    <title>Chesscom Helper</title>\n    <meta charset=\"utf-8\">\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1\">\n    <style>\n      :root {\n        --bg-primary: #0f0f23;\n        --bg-secondary: #1a1a2e;\n        --bg-card: #16213e;\n        --chess-dark: #2d1810;\n        --chess-light: #4a3426;\n        --accent: #64b5f6;\n        --accent-bright: #90caf9;\n        --success: #4caf50;\n        --text-primary: #e8eaed;\n        --text-secondary: #9aa0a6;\n        --shadow: rgba(0,0,0,0.4);\n        --glow: rgba(100, 181, 246, 0.2);\n      }\n      \n      * { box-sizing: border-box; }\n      \n      body {\n        font-family: 'Segoe UI', system-ui, sans-serif;\n        margin: 0;\n        background: linear-gradient(135deg, var(--bg-primary), var(--bg-secondary));\n        min-height: 100vh;\n        padding: 2rem;\n        color: var(--text-primary);\n      }\n      \n      .chess-board {\n        max-width: 600px;\n        margin: 0 auto;\n        background: var(--bg-card);\n        border-radius: 20px;\n        box-shadow: 0 10px 30px var(--shadow), 0 0 0 1px rgba(255,255,255,0.1);\n        padding: 2rem;\n        position: relative;\n        overflow: hidden;\n      }\n      \n      .chess-board::before {\n        content: '';\n        position: absolute;\n        top: -10px;\n        right: -10px;\n        width: 60px;\n        height: 60px;\n        background: repeating-conic-gradient(var(--chess-light) 0deg 90deg, var(--chess-dark) 90deg 180deg);\n        border-radius: 8px;\n        opacity: 0.6;\n      }\n      \n      h1 {\n        color: var(--text-primary);\n        text-align: center;\n        margin: 0 0 1rem 0;\n        font-size: 2.5rem;\n        font-weight: 700;\n        text-shadow: 0 0 20px var(--glow);\n      }\n      \n      h1::after {\n        content: ' \u265A';\n        color: var(--accent-bright);\n        filter: drop-shadow(0 0 10px var(--accent));\n      }\n      \n      .subtitle {\n        text-align: center;\n        color: var(--text-secondary);\n        margin-bottom: 2rem;\n        font-size: 1.1rem;\n      }\n      \n      .status-card {\n        background: linear-gradient(135deg, var(--success), #66bb6a);\n        color: white;\n        padding: 1.5rem;\n        border-radius: 15px;\n        text-align: center;\n        margin: 1.5rem 0;\n        box-shadow: 0 5px 15px rgba(76, 175, 80, 0.3), inset 0 1px 0 rgba(255,255,255,0.2);\n      }\n      \n      .status-card h2 {\n        margin: 0 0 0.5rem 0;\n        font-size: 1.3rem;\n      }\n      \n      .btn {\n        display: inline-block;\n        background: linear-gradient(135deg, var(--accent), var(--accent-bright));\n        color: white;\n        padding: 0.8rem 2rem;\n        border-radius: 25px;\n        text-decoration: none;\n        font-weight: 600;\n        transition: all 0.3s ease;\n        box-shadow: 0 4px 15px rgba(100, 181, 246, 0.3);\n        border: 1px solid rgba(255,255,255,0.2);\n      }\n      \n      .btn:hover {\n        transform: translateY(-2px);\n        box-shadow: 0 6px 20px rgba(100, 181, 246, 0.4);\n        filter: brightness(1.1);\n      }\n      \n      .coming-soon {\n        text-align: center;\n        margin-top: 2rem;\n        padding: 1rem;\n        background: var(--bg-secondary);\n        border-radius: 10px;\n        border-left: 4px solid var(--accent);\n        border: 1px solid rgba(255,255,255,0.1);\n      }\n      \n      .coming-soon h3 {\n        color: var(--text-primary);\n        margin-top: 0;\n      }\n      \n      .coming-soon p {\n        color: var(--text-secondary);\n      }\n      \n      .monitor-form {\n        margin: 2rem 0;\n        padding: 1.5rem;\n        background: var(--bg-secondary);\n        border-radius: 15px;\n        border: 1px solid rgba(255,255,255,0.1);\n      }\n      \n      .monitor-form h3 {\n        color: var(--text-primary);\n        margin: 0 0 1rem 0;\n        text-align: center;\n      }\n      \n      .input-group {\n        margin-bottom: 1rem;\n      }\n      \n      .input-group label {\n        display: block;\n        color: var(--text-secondary);\n        margin-bottom: 0.5rem;\n        font-size: 0.9rem;\n        font-weight: 500;\n      }\n      \n      .input-group input {\n        width: 100%;\n        padding: 0.8rem 1rem;\n        background: var(--bg-card);\n        border: 1px solid rgba(255,255,255,0.2);\n        border-radius: 8px;\n        color: var(--text-primary);\n        font-size: 1rem;\n        transition: all 0.3s ease;\n      }\n      \n      .input-group input:focus {\n        outline: none;\n        border-color: var(--accent);\n        box-shadow: 0 0 0 2px var(--glow);\n      }\n      \n      .input-group input::placeholder {\n        color: var(--text-secondary);\n        opacity: 0.7;\n      }\n      \n      .btn-primary {\n        width: 100%;\n        background: linear-gradient(135deg, var(--accent), var(--accent-bright));\n        color: white;\n        padding: 0.8rem 2rem;\n        border: none;\n        border-radius: 8px;\n        font-size: 1rem;\n        font-weight: 600;\n        cursor: pointer;\n        transition: all 0.3s ease;\n        box-shadow: 0 4px 15px rgba(100, 181, 246, 0.3);\n      }\n      \n      .btn-primary:hover {\n        transform: translateY(-2px);\n        box-shadow: 0 6px 20px rgba(100, 181, 246, 0.4);\n        filter: brightness(1.1);\n      }\n      \n      .players-list {\n        margin: 2rem 0;\n        padding: 1.5rem;\n        background: var(--bg-secondary);\n        border-radius: 15px;\n        border: 1px solid rgba(255,255,255,0.1);\n      }\n      \n      .players-list h3 {\n        color: var(--text-primary);\n        margin: 0 0 1rem 0;\n        text-align: center;\n      }\n      \n      .no-players {\n        color: var(--text-secondary);\n        text-align: center;\n        font-style: italic;\n        margin: 0;\n      }\n      \n      .player-item {\n        display: flex;\n        justify-content: space-between;\n        align-items: center;\n        background: var(--bg-card);\n        padding: 0.8rem 1rem;\n        margin: 0.5rem 0;\n        border-radius: 8px;\n        border: 1px solid rgba(255,255,255,0.1);\n      }\n      \n      .player-name {\n        color: var(--text-primary);\n        font-weight: 500;\n      }\n      \n      .player-status {\n        color: var(--success);\n        font-size: 0.9rem;\n      }\n      \n      @keyframes float {\n        0%, 100% { transform: translateY(0px); }\n        50% { transform: translateY(-10px); }\n      }\n      \n      .floating {\n        animation: float 3s ease-in-out infinite;\n      }\n    </style>\n</head>\n<body>\n    <div class=\"chess-board\">\n        <h1 class=\"floating\">Chesscom Helper</h1>\n        <p class=\"subtitle\">Monitor your favorite Chess.com players and get email notifications!</p>\n        \n        <div class=\"status-card\">\n            <h2>\u2705 API Status</h2>\n            <p>Server is running smoothly</p>\n            <a href=\"/health\" class=\"btn\">Check Health</a>\n        </div>\n        \n        <div class=\"monitor-form\">\n            <h3>\uD83C\uDFAF Monitor a Player</h3>\n            <form id=\"playerForm\">\n                <div class=\"input-group\">\n                    <label for=\"username\">Chess.com Username</label>\n                    <input type=\"text\" id=\"username\" name=\"username\" placeholder=\"e.g. Magnus\" required>\n                </div>\n                <button type=\"submit\" class=\"btn-primary\">Start Monitoring</button>\n            </form>\n        </div>\n        \n        <div class=\"players-list\">\n            <h3>\uD83D\uDC65 Monitored Players</h3>\n            <div id=\"playersList\">\n                <p class=\"no-players\">No players being monitored yet. Add one above!</p>\n            </div>\n        </div>\n        \n        <div class=\"coming-soon\">\n            <h3>\uD83D\uDE80 Coming Soon</h3>\n            <p>Email notifications, game analysis, and more!</p>\n        </div>\n    </div>\n    \n    <script>\n        // Load players list on page load\n        async function loadPlayers() {\n            try {\n                const response = await fetch('/api/players');\n                const data = await response.json();\n                displayPlayers(data.players);\n            } catch (error) {\n                console.error('Failed to load players:', error);\n            }\n        }\n        \n        // Display players in the list\n        function displayPlayers(players) {\n            const playersList = document.getElementById('playersList');\n            \n            if (players.length === 0) {\n                playersList.innerHTML = '<p class=\"no-players\">No players being monitored yet. Add one above!</p>';\n                return;\n            }\n            \n            playersList.innerHTML = players.map(player => \n                '<div class=\"player-item\">' +\n                    '<span class=\"player-name\">\u265F\uFE0F ' + player + '</span>' +\n                    '<span class=\"player-status\">Monitoring</span>' +\n                '</div>'\n            ).join('');\n        }\n        \n        // Form submission\n        document.getElementById('playerForm').addEventListener('submit', async function(e) {\n            e.preventDefault();\n            const username = document.getElementById('username').value.trim();\n            const submitBtn = this.querySelector('button[type=\"submit\"]');\n            \n            if (!username) {\n                alert('Please enter a username');\n                return;\n            }\n            \n            // Disable button and show loading\n            submitBtn.disabled = true;\n            submitBtn.textContent = 'Validating...';\n            \n            try {\n                const response = await fetch('/api/monitor', {\n                    method: 'POST',\n                    headers: {\n                        'Content-Type': 'application/json',\n                    },\n                    body: JSON.stringify({ username })\n                });\n                \n                const data = await response.json();\n                \n                if (response.ok) {\n                    let message = '\u2705 ' + data.message;\n                    if (data.playerData && data.playerData.name) {\n                        message += '\\n\uD83D\uDC64 Player: ' + data.playerData.name;\n                    }\n                    alert(message);\n                    document.getElementById('username').value = '';\n                    // Refresh the players list\n                    loadPlayers();\n                } else {\n                    alert('\u274C ' + data.error);\n                }\n            } catch (error) {\n                alert('\u274C Error connecting to server');\n            } finally {\n                submitBtn.disabled = false;\n                submitBtn.textContent = 'Start Monitoring';\n            }\n        });\n        \n        // Load players when page loads\n        loadPlayers();\n    </script>\n</body>\n</html>`, {\n        headers: { 'Content-Type': 'text/html' }\n      })\n    }\n    \n    // API endpoint to get monitored players\n    if (url.pathname === '/api/players' && request.method === 'GET') {\n      return new Response(JSON.stringify({ \n        players: monitoredPlayers,\n        count: monitoredPlayers.length\n      }), {\n        status: 200,\n        headers: { 'Content-Type': 'application/json' }\n      })\n    }\n\n    // API endpoint to monitor a player\n    if (url.pathname === '/api/monitor' && request.method === 'POST') {\n      try {\n        const body = await request.json()\n        const { username } = body\n        \n        if (!username || username.length < 3 || username.length > 25) {\n          return new Response(JSON.stringify({ \n            error: 'Invalid username. Must be between 3 and 25 characters.' \n          }), {\n            status: 400,\n            headers: { 'Content-Type': 'application/json' }\n          })\n        }\n        \n        // Check if already monitoring this player\n        if (monitoredPlayers.includes(username)) {\n          return new Response(JSON.stringify({ \n            error: `Already monitoring ${username}` \n          }), {\n            status: 400,\n            headers: { 'Content-Type': 'application/json' }\n          })\n        }\n        \n        // Validate user exists on Chess.com\n        const validation = await validateChessComUser(username)\n        if (!validation.exists) {\n          return new Response(JSON.stringify({ \n            error: `Chess.com user \"${username}\" not found. Please check the spelling.` \n          }), {\n            status: 404,\n            headers: { 'Content-Type': 'application/json' }\n          })\n        }\n        \n        // Add to monitored players\n        monitoredPlayers.push(username)\n        \n        return new Response(JSON.stringify({ \n          success: true,\n          message: `Started monitoring ${username}`,\n          username: username,\n          totalPlayers: monitoredPlayers.length,\n          playerData: validation.data ? {\n            name: validation.data.name,\n            joined: validation.data.joined,\n            status: validation.data.status\n          } : null\n        }), {\n          status: 200,\n          headers: { 'Content-Type': 'application/json' }\n        })\n      } catch (error) {\n        return new Response(JSON.stringify({ \n          error: 'Invalid request body' \n        }), {\n          status: 400,\n          headers: { 'Content-Type': 'application/json' }\n        })\n      }\n    }\n    \n    // 404 for everything else\n    return new Response(JSON.stringify({ error: 'Not Found' }), {\n      status: 404,\n      headers: { 'Content-Type': 'application/json' }\n    })\n  }\n}", "import type { Middleware } from \"./common\";\n\nconst drainBody: Middleware = async (request, env, _ctx, middlewareCtx) => {\n\ttry {\n\t\treturn await middlewareCtx.next(request, env);\n\t} finally {\n\t\ttry {\n\t\t\tif (request.body !== null && !request.bodyUsed) {\n\t\t\t\tconst reader = request.body.getReader();\n\t\t\t\twhile (!(await reader.read()).done) {}\n\t\t\t}\n\t\t} catch (e) {\n\t\t\tconsole.error(\"Failed to drain the unused request body.\", e);\n\t\t}\n\t}\n};\n\nexport default drainBody;\n", "import type { Middleware } from \"./common\";\n\ninterface JsonError {\n\tmessage?: string;\n\tname?: string;\n\tstack?: string;\n\tcause?: JsonError;\n}\n\nfunction reduceError(e: any): JsonError {\n\treturn {\n\t\tname: e?.name,\n\t\tmessage: e?.message ?? String(e),\n\t\tstack: e?.stack,\n\t\tcause: e?.cause === undefined ? undefined : reduceError(e.cause),\n\t};\n}\n\n// See comment in `bundle.ts` for details on why this is needed\nconst jsonError: Middleware = async (request, env, _ctx, middlewareCtx) => {\n\ttry {\n\t\treturn await middlewareCtx.next(request, env);\n\t} catch (e: any) {\n\t\tconst error = reduceError(e);\n\t\treturn Response.json(error, {\n\t\t\tstatus: 500,\n\t\t\theaders: { \"MF-Experimental-Error-Stack\": \"true\" },\n\t\t});\n\t}\n};\n\nexport default jsonError;\n", "\t\t\t\timport worker, * as OTHER_EXPORTS from \"/Users/emilycogsdill/Documents/GitHub/chesscom-helper/worktrees/development/src/index.ts\";\n\t\t\t\timport * as __MIDDLEWARE_0__ from \"/Users/emilycogsdill/Documents/GitHub/chesscom-helper/worktrees/development/node_modules/wrangler/templates/middleware/middleware-ensure-req-body-drained.ts\";\nimport * as __MIDDLEWARE_1__ from \"/Users/emilycogsdill/Documents/GitHub/chesscom-helper/worktrees/development/node_modules/wrangler/templates/middleware/middleware-miniflare3-json-error.ts\";\n\n\t\t\t\texport * from \"/Users/emilycogsdill/Documents/GitHub/chesscom-helper/worktrees/development/src/index.ts\";\n\n\t\t\t\texport const __INTERNAL_WRANGLER_MIDDLEWARE__ = [\n\t\t\t\t\t\n\t\t\t\t\t__MIDDLEWARE_0__.default,__MIDDLEWARE_1__.default\n\t\t\t\t]\n\t\t\t\texport default worker;", "export type Awaitable<T> = T | Promise<T>;\n// TODO: allow dispatching more events?\nexport type Dispatcher = (\n\ttype: \"scheduled\",\n\tinit: { cron?: string }\n) => Awaitable<void>;\n\nexport type IncomingRequest = Request<\n\tunknown,\n\tIncomingRequestCfProperties<unknown>\n>;\n\nexport interface MiddlewareContext {\n\tdispatch: Dispatcher;\n\tnext(request: IncomingRequest, env: any): Awaitable<Response>;\n}\n\nexport type Middleware = (\n\trequest: IncomingRequest,\n\tenv: any,\n\tctx: ExecutionContext,\n\tmiddlewareCtx: MiddlewareContext\n) => Awaitable<Response>;\n\nconst __facade_middleware__: Middleware[] = [];\n\n// The register functions allow for the insertion of one or many middleware,\n// We register internal middleware first in the stack, but have no way of controlling\n// the order that addMiddleware is run in service workers so need an internal function.\nexport function __facade_register__(...args: (Middleware | Middleware[])[]) {\n\t__facade_middleware__.push(...args.flat());\n}\nexport function __facade_registerInternal__(\n\t...args: (Middleware | Middleware[])[]\n) {\n\t__facade_middleware__.unshift(...args.flat());\n}\n\nfunction __facade_invokeChain__(\n\trequest: IncomingRequest,\n\tenv: any,\n\tctx: ExecutionContext,\n\tdispatch: Dispatcher,\n\tmiddlewareChain: Middleware[]\n): Awaitable<Response> {\n\tconst [head, ...tail] = middlewareChain;\n\tconst middlewareCtx: MiddlewareContext = {\n\t\tdispatch,\n\t\tnext(newRequest, newEnv) {\n\t\t\treturn __facade_invokeChain__(newRequest, newEnv, ctx, dispatch, tail);\n\t\t},\n\t};\n\treturn head(request, env, ctx, middlewareCtx);\n}\n\nexport function __facade_invoke__(\n\trequest: IncomingRequest,\n\tenv: any,\n\tctx: ExecutionContext,\n\tdispatch: Dispatcher,\n\tfinalMiddleware: Middleware\n): Awaitable<Response> {\n\treturn __facade_invokeChain__(request, env, ctx, dispatch, [\n\t\t...__facade_middleware__,\n\t\tfinalMiddleware,\n\t]);\n}\n", "// This loads all middlewares exposed on the middleware object and then starts\n// the invocation chain. The big idea is that we can add these to the middleware\n// export dynamically through wrangler, or we can potentially let users directly\n// add them as a sort of \"plugin\" system.\n\nimport ENTRY, { __INTERNAL_WRANGLER_MIDDLEWARE__ } from \"/Users/emilycogsdill/Documents/GitHub/chesscom-helper/worktrees/development/.wrangler/tmp/bundle-dF49rh/middleware-insertion-facade.js\";\nimport { __facade_invoke__, __facade_register__, Dispatcher } from \"/Users/emilycogsdill/Documents/GitHub/chesscom-helper/worktrees/development/node_modules/wrangler/templates/middleware/common.ts\";\nimport type { WorkerEntrypointConstructor } from \"/Users/emilycogsdill/Documents/GitHub/chesscom-helper/worktrees/development/.wrangler/tmp/bundle-dF49rh/middleware-insertion-facade.js\";\n\n// Preserve all the exports from the worker\nexport * from \"/Users/emilycogsdill/Documents/GitHub/chesscom-helper/worktrees/development/.wrangler/tmp/bundle-dF49rh/middleware-insertion-facade.js\";\n\nclass __Facade_ScheduledController__ implements ScheduledController {\n\treadonly #noRetry: ScheduledController[\"noRetry\"];\n\n\tconstructor(\n\t\treadonly scheduledTime: number,\n\t\treadonly cron: string,\n\t\tnoRetry: ScheduledController[\"noRetry\"]\n\t) {\n\t\tthis.#noRetry = noRetry;\n\t}\n\n\tnoRetry() {\n\t\tif (!(this instanceof __Facade_ScheduledController__)) {\n\t\t\tthrow new TypeError(\"Illegal invocation\");\n\t\t}\n\t\t// Need to call native method immediately in case uncaught error thrown\n\t\tthis.#noRetry();\n\t}\n}\n\nfunction wrapExportedHandler(worker: ExportedHandler): ExportedHandler {\n\t// If we don't have any middleware defined, just return the handler as is\n\tif (\n\t\t__INTERNAL_WRANGLER_MIDDLEWARE__ === undefined ||\n\t\t__INTERNAL_WRANGLER_MIDDLEWARE__.length === 0\n\t) {\n\t\treturn worker;\n\t}\n\t// Otherwise, register all middleware once\n\tfor (const middleware of __INTERNAL_WRANGLER_MIDDLEWARE__) {\n\t\t__facade_register__(middleware);\n\t}\n\n\tconst fetchDispatcher: ExportedHandlerFetchHandler = function (\n\t\trequest,\n\t\tenv,\n\t\tctx\n\t) {\n\t\tif (worker.fetch === undefined) {\n\t\t\tthrow new Error(\"Handler does not export a fetch() function.\");\n\t\t}\n\t\treturn worker.fetch(request, env, ctx);\n\t};\n\n\treturn {\n\t\t...worker,\n\t\tfetch(request, env, ctx) {\n\t\t\tconst dispatcher: Dispatcher = function (type, init) {\n\t\t\t\tif (type === \"scheduled\" && worker.scheduled !== undefined) {\n\t\t\t\t\tconst controller = new __Facade_ScheduledController__(\n\t\t\t\t\t\tDate.now(),\n\t\t\t\t\t\tinit.cron ?? \"\",\n\t\t\t\t\t\t() => {}\n\t\t\t\t\t);\n\t\t\t\t\treturn worker.scheduled(controller, env, ctx);\n\t\t\t\t}\n\t\t\t};\n\t\t\treturn __facade_invoke__(request, env, ctx, dispatcher, fetchDispatcher);\n\t\t},\n\t};\n}\n\nfunction wrapWorkerEntrypoint(\n\tklass: WorkerEntrypointConstructor\n): WorkerEntrypointConstructor {\n\t// If we don't have any middleware defined, just return the handler as is\n\tif (\n\t\t__INTERNAL_WRANGLER_MIDDLEWARE__ === undefined ||\n\t\t__INTERNAL_WRANGLER_MIDDLEWARE__.length === 0\n\t) {\n\t\treturn klass;\n\t}\n\t// Otherwise, register all middleware once\n\tfor (const middleware of __INTERNAL_WRANGLER_MIDDLEWARE__) {\n\t\t__facade_register__(middleware);\n\t}\n\n\t// `extend`ing `klass` here so other RPC methods remain callable\n\treturn class extends klass {\n\t\t#fetchDispatcher: ExportedHandlerFetchHandler<Record<string, unknown>> = (\n\t\t\trequest,\n\t\t\tenv,\n\t\t\tctx\n\t\t) => {\n\t\t\tthis.env = env;\n\t\t\tthis.ctx = ctx;\n\t\t\tif (super.fetch === undefined) {\n\t\t\t\tthrow new Error(\"Entrypoint class does not define a fetch() function.\");\n\t\t\t}\n\t\t\treturn super.fetch(request);\n\t\t};\n\n\t\t#dispatcher: Dispatcher = (type, init) => {\n\t\t\tif (type === \"scheduled\" && super.scheduled !== undefined) {\n\t\t\t\tconst controller = new __Facade_ScheduledController__(\n\t\t\t\t\tDate.now(),\n\t\t\t\t\tinit.cron ?? \"\",\n\t\t\t\t\t() => {}\n\t\t\t\t);\n\t\t\t\treturn super.scheduled(controller);\n\t\t\t}\n\t\t};\n\n\t\tfetch(request: Request<unknown, IncomingRequestCfProperties>) {\n\t\t\treturn __facade_invoke__(\n\t\t\t\trequest,\n\t\t\t\tthis.env,\n\t\t\t\tthis.ctx,\n\t\t\t\tthis.#dispatcher,\n\t\t\t\tthis.#fetchDispatcher\n\t\t\t);\n\t\t}\n\t};\n}\n\nlet WRAPPED_ENTRY: ExportedHandler | WorkerEntrypointConstructor | undefined;\nif (typeof ENTRY === \"object\") {\n\tWRAPPED_ENTRY = wrapExportedHandler(ENTRY);\n} else if (typeof ENTRY === \"function\") {\n\tWRAPPED_ENTRY = wrapWorkerEntrypoint(ENTRY);\n}\nexport default WRAPPED_ENTRY;\n"],
  "mappings": "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",
  "names": []
}
